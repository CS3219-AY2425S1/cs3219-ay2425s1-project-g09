steps:
  # Frontend Service
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/frontend"
      - "./frontend"
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/frontend"
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "frontend"
      - "--image"
      - "gcr.io/$PROJECT_ID/frontend"
      - "--region"
      - "asia-southeast1"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"

  # Question Service
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/question-service"
      - "./backend/question-service"
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/question-service"
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "question-service"
      - "--image"
      - "gcr.io/$PROJECT_ID/question-service"
      - "--region"
      - "asia-southeast1"

  # User Service
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/user-service"
      - "./backend/user-service"
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/user-service"
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "user-service"
      - "--image"
      - "gcr.io/$PROJECT_ID/user-service"
      - "--region"
      - "asia-southeast1"

  # Notification Service
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/notification-service"
      - "./backend/notification-service"
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/notification-service"
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "notification-service"
      - "--image"
      - "gcr.io/$PROJECT_ID/notification-service"
      - "--region"
      - "asia-southeast1"

  # Matching Service
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/matching-service"
      - "./backend/matching-service"
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/matching-service"
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "matching-service"
      - "--image"
      - "gcr.io/$PROJECT_ID/matching-service"
      - "--region"
      - "asia-southeast1"

  # Collaboration Service
  - name: "gcr.io/cloud-builders/docker" 
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/collaboration-service"
      - "./backend/collaboration-service"
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/collaboration-service"
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy" 
      - "collaboration-service"
      - "--image"
      - "gcr.io/$PROJECT_ID/collaboration-service"
      - "--region"
      - "asia-southeast1"

  # AI Chatbot Service
  - name: "gcr.io/cloud-builders/docker" 
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/aichatbot-service"
      - "./backend/aichatbot-service"
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/aichatbot-service"
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy" 
      - "aichatbot-service"
      - "--image"
      - "gcr.io/$PROJECT_ID/aichatbot-service"
      - "--region"
      - "asia-southeast1"

  # RabbitMQ Service
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/rabbitmq"
      - "--build-arg"
      - "RABBITMQ_DEFAULT_USER=peerprep"
      - "--build-arg"
      - "RABBITMQ_DEFAULT_PASS=peerprep"
      - "--build-arg"
      - "RABBITMQ_IMAGE=rabbitmq:3-management"
      - "."
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/rabbitmq"
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "rabbitmq"
      - "--image"
      - "gcr.io/$PROJECT_ID/rabbitmq"
      - "--region"
      - "asia-southeast1"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--set-env-vars"
      - "RABBITMQ_DEFAULT_USER=peerprep,RABBITMQ_DEFAULT_PASS=peerprep"

images:
  - "gcr.io/$PROJECT_ID/frontend"
  - "gcr.io/$PROJECT_ID/question-service"
  - "gcr.io/$PROJECT_ID/user-service"
  - "gcr.io/$PROJECT_ID/notification-service"
  - "gcr.io/$PROJECT_ID/matching-service"
  - "gcr.io/$PROJECT_ID/collaboration-service"
  - "gcr.io/$PROJECT_ID/aichatbot-service"
  - "gcr.io/$PROJECT_ID/rabbitmq"

options:
    logging: "CLOUD_LOGGING_ONLY"
    